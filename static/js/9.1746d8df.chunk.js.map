{"version":3,"sources":["components/AuthComponent/index.tsx","pages/Permission.tsx"],"names":["AuthComponent","props","userinfo","useContext","stores","children","permissions","includes","permission","observer","userStore","saveUserinfo","state","useLocalStore","isAdmin","checkedChildren","unCheckedChildren","checked","onClick","data","account","name","color"],"mappings":"8KAeeA,EARyB,SAAAC,GACtC,IAAQC,EAAaC,qBAAWC,KAAxBF,SACAG,EAA0BJ,EAA1BI,SAGR,OAHkCJ,EAAhBK,YACgBC,SAASL,EAASM,YAE7BH,EAAkB,M,eCkC5BI,uBAxCc,SAAAR,GAC3B,MAAmCE,qBAAWO,KAAtCR,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,aACZC,EAAQC,aAAc,iBAAO,CACjCC,QAAiC,UAAxBZ,EAASM,eAmBpB,OACE,gCACE,mBACEO,gBAAgB,QAChBC,kBAAkB,QAClBC,QAASL,EAAME,QACfI,QAtBN,WACEN,EAAME,SAAWF,EAAME,QACvB,IAAMK,EAAOP,EAAME,QACf,CACEM,QAAS,gBACTC,KAAM,QACNb,WAAY,SAEd,CACEY,QAAS,gBACTC,KAAM,QACNb,WAAY,SAElBG,EAAaQ,MAWX,oDACqB,iCAASP,EAAME,QAAU,QAAU,aAExD,cAAC,EAAD,CAAeR,YAAa,CAAC,SAA7B,SACE,mBAAKgB,MAAM,OAAX","file":"static/js/9.1746d8df.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport * as stores from '../../store'\n\ninterface IProps {\n  permissions: Permission[]\n}\n\nconst AuthComponent: React.FC<IProps> = props => {\n  const { userinfo } = useContext(stores.userStore)\n  const { children, permissions } = props\n  const hasPermission = permissions.includes(userinfo.permission)\n\n  return hasPermission ? children as any : null\n}\n\nexport default AuthComponent\n","import React, { useContext } from 'react'\nimport { Switch, Tag } from 'antd'\nimport AuthComponent from '../components/AuthComponent'\nimport { observer, useLocalStore } from 'mobx-react-lite'\nimport { userStore } from '../store'\n\nconst Permission: React.FC = props => {\n  const { userinfo, saveUserinfo } = useContext(userStore)\n  const state = useLocalStore(() => ({\n    isAdmin: userinfo.permission === 'admin'\n  }))\n\n  function handleClick() {\n    state.isAdmin = !state.isAdmin\n    const data = state.isAdmin\n      ? {\n          account: 'admin@xxx.com',\n          name: 'admin',\n          permission: 'admin'\n        }\n      : {\n          account: 'guest@xxx.com',\n          name: 'guest',\n          permission: 'guest'\n        }\n    saveUserinfo(data)\n  }\n\n  return (\n    <div>\n      <Switch\n        checkedChildren=\"admin\"\n        unCheckedChildren=\"guest\"\n        checked={state.isAdmin}\n        onClick={handleClick}\n      />\n      <p>\n        Current permission <strong>{state.isAdmin ? 'admin' : 'guest'}</strong>\n      </p>\n      <AuthComponent permissions={['admin']}>\n        <Tag color=\"blue\">only on admin</Tag>\n      </AuthComponent>\n    </div>\n  )\n}\n\nexport default observer(Permission)\n"],"sourceRoot":""}